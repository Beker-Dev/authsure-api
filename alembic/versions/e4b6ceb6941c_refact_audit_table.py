"""refact audit table

Revision ID: e4b6ceb6941c
Revises: 34ddd094dec3
Create Date: 2023-11-25 19:10:42.571199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e4b6ceb6941c'
down_revision: Union[str, None] = '34ddd094dec3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audit', sa.Column('session_id', sa.Integer(), nullable=False))
    op.drop_constraint('audit_client_id_fkey', 'audit', type_='foreignkey')
    op.drop_constraint('audit_user_id_fkey', 'audit', type_='foreignkey')
    op.create_foreign_key(None, 'audit', 'session', ['session_id'], ['id'])
    op.drop_column('audit', 'user_id')
    op.drop_column('audit', 'client_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audit', sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('audit', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'audit', type_='foreignkey')
    op.create_foreign_key('audit_user_id_fkey', 'audit', 'user', ['user_id'], ['id'])
    op.create_foreign_key('audit_client_id_fkey', 'audit', 'client', ['client_id'], ['id'])
    op.drop_column('audit', 'session_id')
    # ### end Alembic commands ###
